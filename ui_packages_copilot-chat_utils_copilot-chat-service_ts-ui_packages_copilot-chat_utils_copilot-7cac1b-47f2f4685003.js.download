"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["ui_packages_copilot-chat_utils_copilot-chat-service_ts-ui_packages_copilot-chat_utils_copilot-7cac1b"],{60112:(e,t,s)=>{s.d(t,{L:()=>BlackbirdPermissionCaches});var a=s(27756),r=s(28784);let BlackbirdPermissionCaches=class BlackbirdPermissionCaches{async setupWarmCachesLoop(){(0,a.M3)()&&(BlackbirdPermissionCaches.warmCachesLoopSetup?await BlackbirdPermissionCaches.warm:(BlackbirdPermissionCaches.warmCachesLoopSetup=!0,await this.warmCaches()))}async warmCaches(){let e=54e4;try{let t=await (0,r.lS)("/search/warm_blackbird_caches",{headers:{Accept:"application/json","X-Requested-With":"XMLHttpRequest"}}),s=await t.json();e=new Date(s.userCacheExpiresAt).getTime()-Date.now()-3e4,(isNaN(e)||e<=5)&&(e=3e4)}catch{}BlackbirdPermissionCaches.warmResolve(),setTimeout(()=>{this.warmCaches()},e)}};BlackbirdPermissionCaches.warmCachesLoopSetup=!1,BlackbirdPermissionCaches.warm=new Promise(e=>{BlackbirdPermissionCaches.warmResolve=e})},39294:(e,t,s)=>{s.d(t,{J:()=>CopilotAuthTokenProvider});let AuthToken=class AuthToken{get authorizationHeaderValue(){return`GitHub-Bearer ${this.value}`}needsRefreshing(e){return this.isExpired||this.ssoChanged(e)}get isExpired(){let e=new Date(this.expiration);return new Date(Date.UTC(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCMilliseconds()))<new Date(Date.now()+15e3)}ssoChanged(e){return!(this.ssoOrgIDs.every(t=>e.includes(t))&&e.every(e=>this.ssoOrgIDs.includes(e)))}static fromResult(e,t){return new AuthToken(e.token,e.expiration,t)}serialize(){return{value:this.value,expiration:this.expiration,ssoOrgIDs:this.ssoOrgIDs}}static deserialize(e){return new AuthToken(e.value,e.expiration,e.ssoOrgIDs)}constructor(e,t,s){this.value=e,this.expiration=t,this.ssoOrgIDs=s}};var a=s(74572),r=s(28784);let i="COPILOT_AUTH_TOKEN";let CopilotAuthTokenProvider=class CopilotAuthTokenProvider{async getAuthToken(){let e=this.getLocalStorageAuthToken();return e?this.validateAuthToken(e):this.fetchAuthToken()}setLocalStorageAuthToken(e){this.copilotLocalStorage.setItem(i,JSON.stringify(e.serialize()))}getLocalStorageAuthToken(){let e=this.copilotLocalStorage.getItem(i);return e?AuthToken.deserialize(JSON.parse(e)):null}async validateAuthToken(e){return e.needsRefreshing(this.ssoOrgIDs)?this.fetchAuthToken():e}fetchAuthToken(){return this.currentAuthTokenRequest||(this.currentAuthTokenRequest=this._fetchAuthToken()),this.currentAuthTokenRequest}async _fetchAuthToken(){let e=await (0,r.lS)("/github-copilot/chat/token",{method:"POST"});if(e.ok){let t=await e.json();this.currentAuthTokenRequest=null;let s=AuthToken.fromResult(t,this.ssoOrgIDs);return this.setLocalStorageAuthToken(s),s}throw this.currentAuthTokenRequest=null,Error("Failed to mint new auth token")}constructor(e){this.ssoOrgIDs=e,this.currentAuthTokenRequest=null,this.copilotLocalStorage=(0,a.A)("localStorage",{throwQuotaErrorsOnSet:!1,ttl:864e5})}}},59592:(e,t,s)=>{s.d(t,{d:()=>ApiCache});let ApiCache=class ApiCache{async get(...e){let t=e.join(this.separator),s=this.cache.get(t);if(s)return s;{let s=this.fetchFn(...e);return this.cache.set(t,s),(await s).ok||this.cache.delete(t),s}}constructor(e){this.fetchFn=e,this.separator="-!-",this.cache=new Map}}},25962:(e,t,s)=>{s.d(t,{Bc:()=>i,Pe:()=>n,fv:()=>o,uN:()=>r,wg:()=>a,y$:()=>l});let a="copilot-chat-textarea",r="copilot-chat-topic-search",i="Review",o="copilot-chat-header-button",n={"Languages & frameworks":["Show me Python beginner projects.","Explain Java's garbage collection.","Start me off with Node.js.","Introduce me to Django best practices."],"Tools & environments":["Set up a local development environment.","Demonstrate the basics of Docker.","Get me started with Git.","Recommend popular VS Code extensions."],"Open source & contribution":["Suggest 10 open source projects I can contribute to.","Walk me through the GitHub Pull Request flow.","How do I start my own open source project?","Guide me through contributing to React's codebase."],"Best practices & concepts":["Explain the SOLID principles of object-oriented design.","Introduce me to test-driven development.","Describe common design patterns.","Teach me about RESTful API design."],"Web development":["Guide me through creating a basic website.","Introduce HTML5 and CSS3 features.","Explain responsive web design.","Start me off with Tailwind CSS."],"Databases & data":["Get me started with SQL queries.","Recommend popular NoSQL databases.","How to back up a database?","Give a walkthrough on normalizing a database."],"Algorithms & data structures":["Teach me basic sorting algorithms.","Explain binary search trees.","Introduce me to graph algorithms.","What is a hash table?"],"Security & authentication":["Give a guide on basic web security.","Show me how to set up OAuth.","What's a JSON Web Token?","Describe common encryption techniques."],"Mobile development":["Kickstart my journey with Android development.","Introduce me to iOS app basics.","Recommend cross-platform mobile frameworks.","Give a guide to the app store submission process."],"Cloud & DevOps":["Start me off with AWS basics.","How do I deploy apps on Azure DevOps?","Introduce me to Kubernetes.","What are the basics of continuous integration/continuous deployment?"],"Frontend frameworks & libraries":["Get me started with React.","Walk me through Vue.js essentials.","What are some best practices in Angular development?","How do I use Svelte for web apps?"],"Performance & optimization":["Teach me about website performance optimization.","Explain database indexing benefits.","What are some tips to optimize JavaScript code?","Give a guide to efficient API caching."]},l={repository:["What questions can I ask?","What does this repository do?","How should I get started exploring this repo?","Can you tell me about this repository?"],issue:["Summarize this issue.","What are the main points being discussed here?","Suggest next steps for this issue."],alert:["Summarize this alert."],file:["Explain this file.","Summarize this file for me.","How can I improve this file?"],"pull-request":["Summarize this pull request.","What commits are included in this PR?","Can you tell me more about this commit?"],discussion:["Summarize this discussion.","Summarize the comments made by user in a discussion.","What were some key decisions made in this discussion?"],job:["Why did this job fail?","How can I fix this build?"],default:["What questions can I ask?","What is the best way to get started with Copilot?","How do I clone this repository?","How do I revert a commit?","How do I add myself as a reviewer?","How do I create a repository?"]}},76206:(e,t,s)=>{s.d(t,{CB:()=>h,DW:()=>l,F2:()=>N,JP:()=>d,Jz:()=>o,Mw:()=>f,P:()=>y,Q7:()=>v,Qt:()=>I,SI:()=>A,Sr:()=>n,Th:()=>b,UU:()=>O,Vb:()=>m,Xo:()=>E,Xs:()=>g,Y6:()=>c,Ye:()=>M,Z6:()=>k,Z8:()=>T,Zn:()=>D,_2:()=>C,iW:()=>_,k4:()=>q,mx:()=>G,p:()=>u,qS:()=>w,s0:()=>L,x_:()=>P,yR:()=>R,yh:()=>$,z$:()=>p});var a=s(83056),r=s(25962),i=s(88043);let o="/copilot",n={400:"This message could not be processed.",401:"You\u2019re not authorized to use Copilot.",403:"This response could not be shown as it violates GitHub\u2019s content policies.",404:"Resource not found. Please try again.",408:"Your network connection was interrupted. Please try again.",413:"Message too large. Please shorten it or remove some references and try again.",429:"GitHub API rate limit exceeded. Please wait and try again."},l="I'm sorry but there was an error. Please try again.";async function u({authToken:e,basePath:t,body:s,integrationId:a,method:r,path:o,streamingResponse:u=!1,realIp:c}){try{let h={Authorization:e.authorizationHeaderValue,"copilot-integration-id":a};for(let e of(0,i.f)()){let t=e.split("="),s=t[0]?.replaceAll("_","-"),a="1";t.length>1&&(a=t[1]),h[`X-Experiment-${s}`]=a}u&&(h["Content-Type"]="text/event-stream"),c&&(h["X-Real-IP"]=c);let p=await fetch(t+o,{method:r,mode:"cors",cache:"no-cache",headers:h,body:JSON.stringify(s)});if(p.ok)return p;return{status:p.status,ok:!1,error:n[p.status]||l}}catch{return{status:500,ok:!1,error:l}}}function c({role:e,content:t,error:s,references:a=[],thread:r,confirmations:i}){return{id:crypto.randomUUID(),threadID:r?.id||"temp",role:e,content:t,createdAt:new Date().toISOString(),error:s,references:a,skillExecutions:[],clientConfirmations:i}}function h(e){return e?.name||"New conversation"}function p(e){switch(e.type){case"file":return S(e);case"file-diff":return f(e);case"snippet":return function(e){if(e.title)return e.title;let t=e.path.split("/").pop(),s=`${e.range.start}-${e.range.end}`;return`${t}:${s}`}(e);case"repository":return`${e.ownerLogin}/${e.name}`;case"symbol":case"docset":return e.name;case"commit":return e.message;case"pull-request":return e.title;case"tree-comparison":return`${e.baseRevision.substring(0,5)}..${e.headRevision.substring(0,5)}`;case"third-party":return e.displayName;case"workspace-terminal-log":return"terminal log";case"text":return e.name?e.name:"text reference";case"repo-instructions":return"copilot-instructions.md";default:return"unrecognized reference"}}function m(e){switch(e.type){case"file":return`${e.type}-${e.repoOwner}/${e.repoName}@${e.commitOID}:${e.path}`;case"file-changes":return`${e.type}-${e.repository.owner}/${e.repository.owner}@${e.ref}:${e.path}`;case"file-diff":return`${e.type}:${e.baseFile?.path}@${e.baseFile?.commitOID}-${e.headFile?.path}@${e.headFile?.commitOID}##${e.selectedRange?.start}-${e.selectedRange?.end}`;case"snippet":return`${e.type}-${e.repoOwner}/${e.repoName}@${e.commitOID}:${e.path}#${e.range.start}-${e.range.end}`;case"repository":return`${e.type}-${e.id}-${e.ownerLogin}/${e.name}`;case"symbol":return`${e.type}-${e.kind}-${e.name}`;case"docset":return`${e.type}-${e.name}`;case"commit":return`${e.type}-@${e.oid}-${e.repository.owner}/${e.repository.name}`;case"pull-request":return`${e.type}-${e.commit}-${e.repository.ownerLogin}/${e.repository.name}`;case"web-search":return`${e.type}-${e.query}`;case"workspace-terminal-log":return`${e.type}-${e.repoOwner}/${e.repoName}@${e.pullRequestID}`;case"repo-instructions":return`${e.type}-.github/custom-instructions.md`;default:return""}}function d(e){switch(e.type){case"file":case"file-diff":case"pull-request":case"repo-instructions":return e.url;case"repository":return`/${e.ownerLogin}/${e.name}`;case"commit":return e.permalink;case"third-party":return e.displayUrl;case"snippet":return function(e){if(("file"===e.type||"snippet"===e.type)&&e.languageName&&"markdown"===e.languageName.toLowerCase()){let t=new URL(e.url,window.location.origin);return t.search="plain=1",t.href}return e.url}(e);default:return"#"}}function g(e){return"#"!==e&&""!==e}function T(e){let t=e.path.split("/");return(t.pop(),0===t.length)?"/":t.join("/")}function E(e){return S(e)}function S(e){return e.path.split("/").pop()||e.path}function f(e){let t=e.headFile?.path??e.baseFile?.path??e.head?.path??e.base?.path,s=t?.split("/").pop()??"";return e.selectedRange&&e.selectedRange.start?e.selectedRange.end&&e.selectedRange.start!==e.selectedRange.end?`${s} ${e.selectedRange.start}-${e.selectedRange.end}`:`${s} ${e.selectedRange.start}`:s}function _(e,t){return{type:"file",url:new URL((0,a.IO9)({repo:t,commitish:t.refInfo.name,action:"blob",path:e}),window.location.origin).href,path:e,repoID:t.id,repoOwner:t.ownerLogin,repoName:t.name,ref:t.ref,commitOID:t.commitOID}}function I(e,t){let s=e.symbol?.fully_qualified_name||"";return{type:"symbol",kind:"suggestionSymbol",name:s,suggestionDefinitions:[{identOffset:{start:e.symbol?.ident_start||0,end:e.symbol?.ident_end||0},extentOffset:{start:e.symbol?.extent_start||0,end:e.symbol?.extent_end||0},kind:e.symbol?.kind||"",fullyQualifiedName:s,repoID:t.id,repoOwner:t.ownerLogin,repoName:t.name,ref:e.commit_sha,commitOID:e.commit_sha,path:e.path}],languageID:e.language_id}}function O(e){return{...e,type:"docset"}}function C(){return{type:"magic-knowledge-base"}}function w(e){return{...e,type:"repository"}}function y(e){return!!e&&"sourceRepos"in e}function k(e){return!!e&&!y(e)}function P(e,t){return e===t||void 0!==e&&void 0!==t&&m(e)===m(t)}function R(e,t){if(void 0===e&&void 0===t)return!0;if(void 0===e||void 0===t||e.length!==t.length)return!1;for(let s=0;s<e.length;s++)if(!P(e[s],t[s]))return!1;return!0}function L(e,t){e(!0),"immersive"===t&&window.history.pushState(null,"",`${o}`)}function A(e){return"file"===e.type}function D(e){return"snippet"===e.type}function b(e,t){if("user"===e.role)return{name:t,avatarURL:`/${t}.png`,type:"user"};if(e.references){let t=e.references.find(e=>"github.agent"===e.type);if(t)return{name:t.login,avatarURL:t.avatarURL,type:"agent"}}return{name:"Copilot",avatarURL:"",type:"copilot"}}function $(e){return"agent"===e.type}function v(e){let t=e.map(e=>b(e,"")).filter(e=>e?.type==="agent"),s=new Map;for(let e of t)s.set(e.name,e);return Array.from(s.values())}function N(e){let t=new Date(e.updatedAt).getTime();return Date.now()-t>144e5}function M(e){if(!e)return[];let t=new Set;return e.filter(e=>{let s=JSON.stringify(e.confirmation);return!t.has(s)&&(t.add(s),!0)})}function G(e){let t=e?e.replace(/(\.api|-v2)$/,"").toLowerCase():"default";return{referenceType:e,suggestions:q(r.y$[t]||r.y$.default).slice(0,3).map(e=>({question:e,skill:""}))}}function q(e){let t=e.slice();for(let e=t.length-1;e>0;e--){let s=Math.floor(Math.random()*(e+1)),a=t[e];t[e]=t[s],t[s]=a}return t}},36824:(e,t,s)=>{s.d(t,{k:()=>CopilotChatService});var a=s(60112),r=s(39294),i=s(83056),o=s(28784),n=s(59592),l=s(76206),u=s(88365),c=s(88043);let h=new Set(["snippet","file","symbol","docset","repository"]);let CopilotChatService=class CopilotChatService{async fetchThreads(e={}){let t=new URLSearchParams;"string"==typeof e.name&&t.set("name",e.name);let s=`/threads?${t.toString()}`,a=await this.makeCAPIRequest(s,"GET");if(!a.ok)return a;let r=(await a.json()).threads||[];return{status:a.status,ok:!0,payload:r}}async fetchLatestThread(e){let t=new URLSearchParams;"string"==typeof e&&t.set("thread_id",e);let s=await this.makeCAPIRequest(`/threads/latest?${t.toString()}`,"GET");if(!s.ok)return s;let a=(await s.json()).thread;return{status:s.status,ok:!0,payload:a}}async createThread(){let e=await this.makeCAPIRequest("/threads","POST");if(!e.ok)return e;let t=(await e.json()).thread;return{status:e.status,ok:!0,payload:t}}async deleteThread(e){let t=await this.makeCAPIRequest(`/threads/${e}`,"DELETE");return t.ok?{status:t.status,ok:!0,payload:null}:t}async deleteAllThreads(e){let t=await this.makeCAPIRequest("/threads","DELETE",e);return t.ok?{status:t.status,ok:!0,payload:null}:t}async renameThread(e,t){let s=await this.makeCAPIRequest(`/threads/${e}/name`,"PATCH",{generate:!1,name:t});if(!s.ok)return s;let a=(await s.json()).name||"";return{status:s.status,ok:!0,payload:a}}async clearThread(e){let t=await this.makeCAPIRequest(`/threads/${e}/clear`,"PATCH");return t.ok?{status:t.status,ok:!0,payload:null}:t}async generateThreadName(e){let t=await this.makeCAPIRequest(`/threads/${e}/name`,"PATCH",{generate:!0,name:""});if(!t.ok)return t;let s=(await t.json()).name||"";return{status:t.status,ok:!0,payload:s}}async getSystemPrompt(e){let t=await this.makeCAPIRequest(`/system_prompt/${e}`,"GET");if(!t.ok)return t;let s=await t.json();return{status:t.status,ok:!0,payload:s}}async listMessages(e){if(this.listMessagesCache?.thread.id===e)return{status:200,ok:!0,payload:this.listMessagesCache};let t=await this.makeCAPIRequest(`/threads/${e}/messages`,"GET");if(!t.ok)return t;let s=await t.json();return this.listMessagesCache=s,{status:t.status,ok:!0,payload:s}}async createMessage(e,t,s,a,r,i){this.listMessagesCache=void 0;let o=await this.makeCAPIRequest(`/threads/${e}/messages`,"POST",{content:t,intent:s,references:a,currentURL:window.location.href,customInstructions:r,model:i,settings:u.J.settings??void 0});if(!o.ok)return o;let n=(await o.json()).message;return{status:o.status,ok:!0,payload:n}}async createMessageStreaming(e,t,s,a,r,i,o,n,l,c){this.listMessagesCache=void 0;let h={content:t,intent:s,references:r,context:i,currentURL:window.location.href,streaming:!0,confirmations:o,customInstructions:n,model:l,mode:a,settings:u.J.settings??void 0,customCopilotId:c},p=this.processQueryParams(new URLSearchParams(window.location.search)),m=await this.makeCAPIRequest(`/threads/${e}/messages?${p.toString()}`,"POST",h,!0);return m.ok?{status:m.status,ok:!0,response:m}:m}processQueryParams(e){let t=["instruction_prompt"],s=new URLSearchParams;for(let[a,r]of e)t.includes(a)&&s.append(a,r);return s}async listModels(){let e=await this.makeCAPIRequest("/models","GET",void 0,!1,"");if(!e.ok)return e;let t=await e.json();return{status:e.status,ok:!0,payload:t.data}}async setModelPolicyState(e,t){let s=await this.makeCAPIRequest(`/models/${e}/policy`,"POST",{state:t},!1,"");if(!s.ok)return Promise.reject(Error(`Failed to update model policy state: ${s.status}`))}async sendFeedback({feedback:e,feedbackChoice:t,messageId:s,threadId:a,textResponse:r}){let i=await this.makeDotcomRequest(`${this.urlPathPrefix}/feedback`,"POST",{feedback:e,feedback_choice:t,message_id:s,thread_id:a,text_response:r});return i.ok?{status:i.status,ok:!0,payload:null}:i}async listDocsets(){let e=await this.fetchDocsetsResponse();return e.ok?{status:200,ok:!0,payload:e.payload.knowledgeBases}:e}async listAdministratedCopilotEnterpriseOrganizations(){let e=await this.fetchDocsetsResponse();return e.ok?{status:200,ok:!0,payload:e.payload.administratedCopilotEnterpriseOrganizations}:e}fetchDocsetsResponse(){return this.docsetsPromise||(this.docsetsPromise=this.docsetRequestPromise()),this.docsetsPromise}async docsetRequestPromise(){let e=await this.makeDotcomRequest("/github-copilot/docs/docsets","GET");return e.ok?{status:200,ok:!0,payload:await e.json()}:e}async deleteDocset(e){let t=await this.makeDotcomRequest(`/copilot/docsets/${e.id}`,"DELETE");return t.ok?{status:t.status,ok:!0,payload:null}:t}async listRepoFiles(e){let t=(0,i.ClY)({repo:e,commitOid:e.commitOID,includeDirectories:!1});return this.repoFilesCache.get(t)}async querySymbols(e,t){return await this.blackbirdCaches.setupWarmCachesLoop(),this.querySymbolsCache.get(e.ownerLogin,e.name,t)}async fetchImplicitContext(e,t,s){let a=await this.makeDotcomRequest(`${this.urlPathPrefix}/implicit-context/${t}/${s}/${encodeURIComponent(e)}`,"GET");return a.ok?{status:a.status,ok:a.ok,payload:await a.json()}:a}async fetchRepo(e){let t;if(this.repoDetailsCache.has(e))t=this.repoDetailsCache.get(e);else{let s=await this.makeDotcomRequest(`${this.urlPathPrefix}/repositories/${e}`,"GET");if(!s.ok)return s;t=await s.json(),this.repoDetailsCache.set(e,t)}return{status:200,ok:!0,payload:t}}async listAgents(e){let t=await (0,o.lS)(e);if(!t.ok)return{status:t.status,ok:!1,error:l.Sr[t.status]||l.DW};let s=await t.json();return{status:t.status,ok:t.ok,payload:s}}async listCustomCopilots(){let e=await (0,o.lS)(`${this.urlPathPrefix}/custom_copilots`);if(!e.ok)return{status:e.status,ok:!1,error:l.Sr[e.status]||l.DW};let t=await e.json();return{status:e.status,ok:!0,payload:t}}async hydrateReference(e){if(!h.has(e.type))return{status:204,ok:!0,payload:e};let t=await this.makeDotcomRequest(`${this.urlPathPrefix}/reference_details`,"POST",{reference:e});return t.ok?{status:t.status,ok:t.ok,payload:await t.json()}:t}async fetchLanguageForFileReference(e){let{repoOwner:t,repoName:s}=e,a=window.btoa(e.path),r=(0,i.RT3)({ownerLogin:t,name:s},a,!0),o=await this.makeDotcomRequest(r,"GET");return o.ok?{status:o.status,ok:o.ok,payload:await o.json()}:o}async generateSuggestions(e,t){let s={context:[e],currentUrl:`${window.location.href}`},a=await this.makeCAPIRequest(`/threads/${t}/suggestions`,"POST",s);if(!a.ok)return a;let r=await a.json();return{status:a.status,ok:a.ok,payload:r}}async makeDotcomRequest(e,t,s){let a={};for(let e of(0,c.f)()){let t=e.split("="),s=t[0]?.replaceAll("_","-"),r="1";t.length>1&&(r=t[1]),a[`X-Experiment-${s}`]=r}let r=await this.copilotAuthTokenProvider.getAuthToken();a["X-Copilot-Api-Token"]=r.value;try{let r=await (0,o.lS)(e,{method:t,body:s,headers:a});if(r.ok)return r;return{status:r.status,ok:!1,error:l.Sr[r.status]||l.DW}}catch{return{status:500,ok:!1,error:l.DW}}}get directConnectConfiguration(){return{integrationID:"copilot-chat"}}async makeCAPIRequest(e,t,s,a=!1,r="/github/chat"){let i=this.apiURL,o=await this.copilotAuthTokenProvider.getAuthToken();return await (0,l.p)({basePath:i+r,path:e,method:t,body:s,streamingResponse:a,authToken:o,integrationId:this.directConnectConfiguration.integrationID,realIp:this.realIp})}constructor(e,t,s){this.urlPathPrefix="/github-copilot/chat",this.docsetsPromise=void 0,this.repoDetailsCache=new Map,this.listMessagesCache=void 0,this.blackbirdCaches=new a.L,this.listRepoFilesImpl=async e=>{let t=await this.makeDotcomRequest(e,"GET");return t.ok?{status:200,ok:!0,payload:(await t.json()).paths||[]}:t},this.repoFilesCache=new n.d(this.listRepoFilesImpl),this.querySymbolsImpl=async(e,t,s)=>{let a=await this.makeDotcomRequest(`/search/suggestions?query=repo:${e}/${t} ${s}`,"GET");return a.ok?{status:200,ok:!0,payload:(await a.json()).suggestions.filter(e=>"SUGGESTION_KIND_SYMBOL"===e.kind)}:a},this.querySymbolsCache=new n.d(this.querySymbolsImpl),this.apiURL=e,this.copilotAuthTokenProvider=new r.J(t.map(e=>e.id)),this.realIp=s||""}}},89426:(e,t,s)=>{s.d(t,{C6:()=>i,G7:()=>a,hs:()=>n,mF:()=>l,wh:()=>r,xP:()=>o});let a="tree-comparison",r={explain:"explain",conversation:"conversation",suggest:"suggest",discussFileDiff:"discuss-file-diff",explainFileDiff:"explain-file-diff",reviewPr:"review-pull-request",actionsAgent:"actions-agent"},i=["exception","filtered","publicCode","contentTooLarge","rateLimit","agentUnauthorized","agentRequest","networkError","multipleAgentsAttempt"],o=["bing-search","codesearch","semanticsearch","lexicalsearch","kb-search","pathsearch","show-symbol-definition","getissue","getprcommits","getcommit","getrelease","getrepo","getdiff","get-diff-by-range","getfile","getfilechanges","getdiscussion","get-actions-job-logs","getpullrequest","getalert","planskill","get-github-data","support-search","kb-repo-search"];var n=function(e){return e.Experiments="experiements",e.Prompt="prompt",e.None="none",e}({}),l=function(e){return e.Unknown="unknown",e.Unlicensed="unlicensed",e.LicensedFull="licensed_full",e.LicensedLimited="licensed_limited",e}({})},88365:(e,t,s)=>{s.d(t,{J:()=>o});var a=s(45062),r=s(74572),i=s(76206);let CopilotLocalStorage=class CopilotLocalStorage{get selectedThreadID(){return this.localStorage.getItem(this.COPILOT_SELECTED_THREAD_ID_STORAGE_KEY)}set selectedThreadID(e){let t=this.COPILOT_SELECTED_THREAD_ID_STORAGE_KEY;if(null==e){this.localStorage.removeItem(t);return}this.localStorage.setItem(t,e)}getModel(e){let t=this.localStorage.getItem(this.COPILOT_SELECTED_MODEL_STORAGE_KEY(e));return null===t?t:JSON.parse(t)}setModel(e,t){this.localStorage.setItem(this.COPILOT_SELECTED_MODEL_STORAGE_KEY(e),JSON.stringify(t))}get settings(){let e=this.localStorage.getItem(this.COPILOT_SETTINGS_STORAGE_KEY(this.selectedThreadID));return null===e?e:JSON.parse(e)}set settings(e){this.localStorage.setItem(this.COPILOT_SETTINGS_STORAGE_KEY(this.selectedThreadID),JSON.stringify(e))}getPanelHeight(){let e=this.localStorage.getItem(this.COPILOT_PANEL_HEIGHT);return e?parseInt(e):this.DEFAULT_PANEL_HEIGHT}setPanelHeight(e){let t=this.COPILOT_PANEL_HEIGHT;this.localStorage.setItem(t,e.toString())}getPanelWidth(){let e=this.localStorage.getItem(this.COPILOT_PANEL_WIDTH);return e?parseInt(e):this.DEFAULT_PANEL_WIDTH}setPanelWidth(e){let t=this.COPILOT_PANEL_WIDTH;this.localStorage.setItem(t,e.toString())}getRepoCustomInstructionsState(){return"false"!==this.localStorage.getItem(this.COPILOT_REPO_CUSTOM_INSTRUCTIONS_STATE_KEY)}setRepoCustomInstructionsState(e){let t=this.COPILOT_REPO_CUSTOM_INSTRUCTIONS_STATE_KEY;this.localStorage.setItem(t,e.toString())}getCollapsedState(){return"false"!==this.sessionStorage.getItem(this.COPILOT_COLLAPSED_STATE_KEY)}setCollapsedState(e){let t=this.COPILOT_COLLAPSED_STATE_KEY;this.sessionStorage.setItem(t,e.toString())}getSelectedTopic(e){return this.localStorage.getItem(this.COPILOT_SELECTED_TOPIC_STORAGE_KEY(e))}setSelectedTopic(e,t){if(null==t){this.localStorage.removeItem(this.COPILOT_SELECTED_TOPIC_STORAGE_KEY(e));return}let s=this.COPILOT_SELECTED_TOPIC_STORAGE_KEY(e);this.localStorage.setItem(s,t)}getSavedMessage(e){return this.localStorage.getItem(this.COPILOT_SAVED_USER_MESSAGE_KEY(e))}setSavedMessage(e,t){this.setSavedMessageFast(e,t)}setSavedMessageFast(e,t){let s=this.COPILOT_SAVED_USER_MESSAGE_KEY(e);if(null==t){this.localStorage.removeItem(s);return}this.localStorage.setItem(s,t)}getEntrypointMessage(){return this.localStorage.getItem(this.COPILOT_ENTRYPOINT_MESSAGE_KEY)}setEntrypointMessage(e){if(null==e){this.localStorage.removeItem(this.COPILOT_ENTRYPOINT_MESSAGE_KEY);return}this.localStorage.setItem(this.COPILOT_ENTRYPOINT_MESSAGE_KEY,e)}getCurrentReferences(e){let t=this.COPILOT_CURRENT_REFERENCES_KEY(e),s=this.localStorage.getItem(t);return s?JSON.parse(s):null}setCurrentReferences(e,t){let s=this.COPILOT_CURRENT_REFERENCES_KEY(e),a=t.filter((e,s)=>s===t.findIndex(t=>(0,i.Vb)(e)===(0,i.Vb)(t)));this.localStorage.setItem(s,JSON.stringify(a))}clearCurrentReferences(e){let t=this.COPILOT_CURRENT_REFERENCES_KEY(e);this.localStorage.removeItem(t)}migrateNullThreadToNewThread(e){let t=this.getSavedMessage(null);this.setSavedMessageFast(null,null),t&&this.setSavedMessage(e,t);let s=this.getCurrentReferences(null);this.clearCurrentReferences(null),s&&this.setCurrentReferences(e,s)}getImmersiveSidebarCollapsedState(){return"true"===localStorage.getItem(this.COPILOT_IMMERSIVE_SIDEBAR_COLLAPSED_STATE_KEY)}setImmersiveSidebarCollapsedState(e){localStorage.setItem(this.COPILOT_IMMERSIVE_SIDEBAR_COLLAPSED_STATE_KEY,String(e))}getMeterBannerFlag(){let e=this.localStorage.getItem("COPILOT_METER_BANNER_FLAG");return null===e?null:"true"===e}setMeterBannerFlag(e){this.localStorage.setItem("COPILOT_METER_BANNER_FLAG",String(e))}removeMeterBannerFlag(){this.localStorage.removeItem("COPILOT_METER_BANNER_FLAG")}constructor(){this.COPILOT_REPO_CUSTOM_INSTRUCTIONS_STATE_KEY="COPILOT_REPO_CUSTOM_INSTRUCTIONS_STATE_KEY",this.COPILOT_SELECTED_THREAD_ID_STORAGE_KEY="COPILOT_SELECTED_THREAD_ID_STORAGE_KEY",this.COPILOT_COLLAPSED_STATE_KEY="COPILOT_COLLAPSED_STATE_KEY",this.COPILOT_IMMERSIVE_SIDEBAR_COLLAPSED_STATE_KEY="COPILOT_IMMERSIVE_SIDEBAR_COLLAPSED_STATE_KEY",this.COPILOT_PANEL_HEIGHT="COPILOT_PANEL_HEIGHT",this.DEFAULT_PANEL_HEIGHT=600,this.COPILOT_PANEL_WIDTH="COPILOT_PANEL_WIDTH",this.COPILOT_ENTRYPOINT_MESSAGE_KEY="COPILOT_ENTRYPOINT_MESSAGE_KEY",this.DEFAULT_PANEL_WIDTH=480,this.COPILOT_SELECTED_MODEL_STORAGE_KEY=e=>`COPILOT_SELECTED_MODEL_${e}`,this.COPILOT_SETTINGS_STORAGE_KEY=e=>`COPILOT_SETTINGS_${e}`,this.COPILOT_SAVED_USER_MESSAGE_KEY=e=>`COPILOT_SAVED_USER_MESSAGE_${e}`,this.COPILOT_CURRENT_REFERENCES_KEY=e=>`COPILOT_CURRENT_REFERENCES_${e}`,this.COPILOT_SELECTED_TOPIC_STORAGE_KEY=e=>`COPILOT_SELECTED_TOPIC_${e}`,this.localStorage=(0,r.A)("localStorage",{throwQuotaErrorsOnSet:!1,ttl:864e5}),this.sessionStorage=(0,r.A)("sessionStorage",{throwQuotaErrorsOnSet:!1,ttl:864e5})}};!function(e,t,s,a){var r,i=arguments.length,o=i<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,s):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,s,a);else for(var n=e.length-1;n>=0;n--)(r=e[n])&&(o=(i<3?r(o):i>3?r(t,s,o):r(t,s))||o);i>3&&o&&Object.defineProperty(t,s,o)}([(0,a.s)(100)],CopilotLocalStorage.prototype,"setSavedMessage",null);let o=new CopilotLocalStorage},88043:(e,t,s)=>{s.d(t,{R:()=>o,f:()=>i});var a=s(74572);let r="copilot_experiments";function i(){let e=(0,a.A)("localStorage").getItem(r);return e?e.split(","):[]}function o(e){(0,a.A)("localStorage").setItem(r,e.join(","))}}}]);
//# sourceMappingURL=ui_packages_copilot-chat_utils_copilot-chat-service_ts-ui_packages_copilot-chat_utils_copilot-7cac1b-74ae73addd37.js.map